Index: BAL/WKAL/Concretizations/Fonts/WK/BCWidthIteratorWK.cpp
===================================================================
--- BAL/WKAL/Concretizations/Fonts/WK/BCWidthIteratorWK.cpp        (revision 474)
+++ BAL/WKAL/Concretizations/Fonts/WK/BCWidthIteratorWK.cpp        (working copy)
@@ -27,14 +27,14 @@
 #include "SimpleFontData.h"
 #include <wtf/MathExtras.h>
 
-#if USE(ICU_UNICODE)
+#if USE(ICU_UNICODE) && !USE(BALI18N)
 #include <unicode/unorm.h>
 #endif
 
 using namespace WTF;
 using namespace Unicode;
 
-namespace WebCore {
+namespace WKAL {
 
 // According to http://www.unicode.org/Public/UNIDATA/UCD.html#Canonical_Combining_Class_Values
 static const uint8_t hiraganaKatakanaVoicingMarksCombiningClass = 8;
@@ -208,7 +208,7 @@
 {
     if (currentCharacter + 1 < m_end) {
         if (combiningClass(m_run[currentCharacter + 1]) == hiraganaKatakanaVoicingMarksCombiningClass) {
-#if USE(ICU_UNICODE)
+#if USE(ICU_UNICODE) && !USE(BALI18N)
             // Normalize into composed form using 3.2 rules.
             UChar normalizedCharacters[2] = { 0, 0 };
             UErrorCode uStatus = U_ZERO_ERROR;  
