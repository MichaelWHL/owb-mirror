INCLUDE_DIRECTORIES (
    ${CMAKE_BINARY_DIR}/generated_link/WKAL
    ${CMAKE_SOURCE_DIR}/JavaScriptCore/
    ${CMAKE_SOURCE_DIR}/JavaScriptCore/kjs
    ${CMAKE_SOURCE_DIR}/JavaScriptCore/VM
    ${CMAKE_SOURCE_DIR}/WebCore/bridge
    ${CMAKE_SOURCE_DIR}/WebCore/bridge/bal
)

IF (WEBKIT_USE_I18N STREQUAL "GENERIC")
    INCLUDE_DIRECTORIES (
        ${CMAKE_SOURCE_DIR}/JavaScriptCore/icu
    )
ENDIF (WEBKIT_USE_I18N STREQUAL "GENERIC")

IF (OWBAL_PLATFORM_GRAPHICS STREQUAL "GTK" OR WEBKIT_USE_THREADING STREQUAL "GTK")
    INCLUDE_DIRECTORIES (
        ${GTK2_INCLUDE_DIRS}
    )
ENDIF (OWBAL_PLATFORM_GRAPHICS STREQUAL "GTK" OR WEBKIT_USE_THREADING STREQUAL "GTK")

IF (OWBAL_PLATFORM_GRAPHICS STREQUAL "GTK")
    OWBLN (Gtk/BCIconGtk.h OWBAL 0 0)
ELSEIF (OWBAL_PLATFORM_GRAPHICS STREQUAL "SDL")
    OWBLN (SDL/BCIconSDL.h OWBAL 0 0)
ENDIF (OWBAL_PLATFORM_GRAPHICS STREQUAL "GTK")

IF (WEBKIT_USE_THREADING STREQUAL "GTK")
    OWBLN (Gtk/BCThreadingGtk.h OWBAL/wtf 0 0)
ELSEIF (WEBKIT_USE_THREADING STREQUAL "PTHREADS")
    OWBLN (Pthreads/BCThreadingPthreads.h OWBAL/wtf 0 0)
    OWBLN (WK/BCThreadSpecificWK.h OWBAL/wtf 0 0)
ELSEIF (WEBKIT_USE_THREADING STREQUAL "NONE")
    OWBLN (None/BCThreadingNone.h OWBAL/wtf 0 0)
ENDIF (WEBKIT_USE_THREADING STREQUAL "GTK")

OWBLN (WK/BCASCIICTypeWK.h OWBAL/wtf 0 0)
OWBLN (WK/BCAssertionsWK.h OWBAL/wtf 0 0)
OWBLN (WK/BCDeprecatedPtrListWK.h OWBAL 0 0)
OWBLN (WK/BCDeprecatedPtrListImplWK.h OWBAL 0 0)
OWBLN (WK/BCDeprecatedPtrQueueWK.h OWBAL 0 0)
OWBLN (WK/BCDeprecatedValueListWK.h OWBAL 0 0)
OWBLN (WK/BCDeprecatedValueListImplWK.h OWBAL 0 0)
OWBLN (WK/BCDequeWK.h OWBAL/wtf 0 0)
OWBLN (WK/BCHashCountedSetWK.h OWBAL/wtf 0 0)
OWBLN (WK/BCHashFunctionsWK.h OWBAL/wtf 0 0)
OWBLN (WK/BCHashIteratorsWK.h OWBAL/wtf 0 0)
OWBLN (WK/BCHashMapWK.h OWBAL/wtf 0 0)
OWBLN (WK/BCHashSetWK.h OWBAL/wtf 0 0)
OWBLN (WK/BCHashTableWK.h OWBAL/wtf 0 0)
OWBLN (WK/BCHashTraitsWK.h OWBAL/wtf 0 0)
OWBLN (WK/BCHTTPHeaderMapWK.h OWBAL 0 0)
OWBLN (WK/BCGetPtrWK.h OWBAL/wtf 0 0)
OWBLN (WK/BCKURLWK.h OWBAL 0 0)
OWBLN (WK/BCListHashSetWK.h OWBAL/wtf 0 0)
OWBLN (WK/BCListRefPtrWK.h OWBAL/wtf 0 0)
OWBLN (WK/BCLockerWK.h OWBAL/wtf 0 0)
OWBLN (WK/BCMainThreadWK.h OWBAL 0 0)
OWBLN (WK/BCMathExtrasWK.h OWBAL/wtf 0 0)
OWBLN (WK/BCMessageQueueWK.h OWBAL/wtf 0 0)
OWBLN (WK/BCNoncopyableWK.h OWBAL/wtf 0 0)
OWBLN (WK/BCOwnArrayPtrWK.h OWBAL/wtf 0 0)
OWBLN (WK/BCOwnPtrWK.h OWBAL/wtf 0 0)
OWBLN (WK/BCPassRefPtrWK.h OWBAL/wtf 0 0)
OWBLN (WK/BCRefCountedWK.h OWBAL/wtf 0 0)
OWBLN (WK/BCRefPtrWK.h OWBAL/wtf 0 0)
OWBLN (WK/BCRefPtrHashMapWK.h OWBAL/wtf 0 0)
OWBLN (WK/BCRetainPtrWK.h OWBAL/wtf 0 0)
OWBLN (WK/BCScrollTypesWK.h OWBAL 0 0)
OWBLN (WK/BCSharedBufferWK.h OWBAL 0 0)
OWBLN (WK/BCStringExtrasWK.h OWBAL/wtf 0 0)
OWBLN (WK/BCTCSystemAllocWK.h OWBAL/wtf 0 0)
OWBLN (WK/BCTCPackedCacheWK.h OWBAL/wtf 0 0)
OWBLN (WK/BCTCPageMapWK.h OWBAL/wtf 0 0)
OWBLN (WK/BCTCSpinLockWK.h OWBAL/wtf 0 0)
OWBLN (WK/BCTreeSharedWK.h OWBAL 0 0)
OWBLN (WK/BCVectorWK.h OWBAL/wtf 0 0)
OWBLN (WK/BCVectorTraitsWK.h OWBAL/wtf 0 0)
OWBLN (WK/BCbalValuePrivateWK.h OWBAL 0 0)
OWBLN (WK/BCAVLTreeWK.h OWBAL/wtf 0 0)

OWBLN (Common/BCbal_objectCommon.h OWBAL 0 0)

AUX_SOURCE_DIRECTORY (WK TYPES_SRC)
AUX_SOURCE_DIRECTORY (Common TYPES_SRC)
IF (OWBAL_PLATFORM_GRAPHICS STREQUAL "GTK")
    LIST (APPEND TYPES_SRC
        Gtk/BCIconGtk.cpp
    )
ELSEIF (OWBAL_PLATFORM_GRAPHICS STREQUAL "SDL")
    LIST (APPEND TYPES_SRC
        SDL/BCIconSDL.cpp
    )
ENDIF (OWBAL_PLATFORM_GRAPHICS STREQUAL "GTK")

IF (WEBKIT_USE_THREADING STREQUAL "GTK")
    LIST (APPEND TYPES_SRC
        Gtk/BCMainThreadGtk.cpp
        Gtk/BCThreadingGtk.cpp
    )
ELSEIF (WEBKIT_USE_THREADING STREQUAL "PTHREADS")
    AUX_SOURCE_DIRECTORY (Pthreads TYPES_SRC)
ELSEIF (WEBKIT_USE_THREADING STREQUAL "NONE")
    AUX_SOURCE_DIRECTORY (None TYPES_SRC)
ENDIF (WEBKIT_USE_THREADING STREQUAL "GTK")

INCLUDE (Customer/CMakeLists.txt OPTIONAL)

IF (BUILD_SHARED_LIBS)
    ADD_LIBRARY (bal-types ${TYPES_SRC})
ELSE (BUILD_SHARED_LIBS)
    ADD_LIBRARY (bal-types STATIC ${TYPES_SRC})
ENDIF (BUILD_SHARED_LIBS)

IF (OWBAL_PLATFORM_GRAPHICS STREQUAL "GTK")
    TARGET_LINK_LIBRARIES (bal-types ${GTK2_LIBRARIES})
ENDIF (OWBAL_PLATFORM_GRAPHICS STREQUAL "GTK")
IF (WEBKIT_USE_THREADING STREQUAL "GTK")
    TARGET_LINK_LIBRARIES (bal-types ${GTHREAD_LIBRARIES})
ENDIF (WEBKIT_USE_THREADING STREQUAL "GTK")

INSTALL (TARGETS bal-types
    LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib
    ARCHIVE DESTINATION ${CMAKE_INSTALL_PREFIX}/lib
)

